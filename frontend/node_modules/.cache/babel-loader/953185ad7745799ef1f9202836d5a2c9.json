{"ast":null,"code":"var _jsxFileName = \"/home/victor/Desktop/react pet project/pet/src/components/products/Product.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardMedia, CardContent, CardActions, Typography, IconButton } from '@material-ui/core';\nimport { AddShoppingCart } from '@material-ui/icons';\nimport axios from \"axios\";\nimport useStyles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Product({\n  product\n}) {\n  _s();\n\n  const classes = useStyles();\n  const url = \"\";\n\n  const addToCart = () => {\n    axios.post(url, {\n      userId: localStorage.get,\n      password: password\n    }).then(response => {\n      localStorage.setItem(\"user\", JSON.stringify(response.data.username));\n      localStorage.setItem(\"token\", JSON.stringify(response.data.accessToken));\n      localStorage.setItem(\"id\", JSON.stringify(response.data.id));\n      console.log(localStorage.getItem(\"user\"));\n      setLoginStatus(false);\n      handleCloseModal();\n    });\n\n    if (localStorage.getItem(\"user\") == \"\") {\n      setAlert(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      className: classes.media,\n      image: product.image,\n      title: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cardContent,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: product.price + \" $\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: [\" \", product.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      className: classes.cardActions,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Add to Cart\",\n        children: /*#__PURE__*/_jsxDEV(AddShoppingCart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Product, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/victor/Desktop/react pet project/pet/src/components/products/Product.jsx"],"names":["React","Card","CardMedia","CardContent","CardActions","Typography","IconButton","AddShoppingCart","axios","useStyles","Product","product","classes","url","addToCart","post","userId","localStorage","get","password","then","response","setItem","JSON","stringify","data","username","accessToken","id","console","log","getItem","setLoginStatus","handleCloseModal","setAlert","root","media","image","name","cardContent","price","description","cardActions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Card, CardMedia, CardContent, CardActions,Typography,IconButton} from '@material-ui/core';\nimport {AddShoppingCart} from '@material-ui/icons';\nimport axios from \"axios\";\n\nimport useStyles from './style';\n\n\n\n\n\nfunction Product({product}) {\n    const classes = useStyles();\n    const url = \"\"\n\n    const addToCart = () => {\n        axios\n          .post(url, {\n            userId: localStorage.get,\n            password: password,\n          })\n          .then((response) => {\n            localStorage.setItem(\"user\", JSON.stringify(response.data.username));\n            localStorage.setItem(\"token\",JSON.stringify(response.data.accessToken));\n            localStorage.setItem(\"id\",JSON.stringify(response.data.id));\n    \n            console.log(localStorage.getItem(\"user\"));\n            setLoginStatus(false);\n            handleCloseModal();\n          });\n    \n        if (localStorage.getItem(\"user\") == \"\") {\n          setAlert(true);\n        }\n      };\n    \n\n    return (\n        <Card className= {classes.root}>\n            <CardMedia className= {classes.media} image ={product.image} title= {product.name} />\n            <CardContent >\n                <div className= {classes.cardContent}>\n                    <Typography variant= \"h5\" gutterBottom>\n                        {product.name}\n                    </Typography>\n                    <Typography>\n                    {product.price + \" $\"} \n                    </Typography>\n                </div>\n                <Typography variant = \"body2\" color= \"textSecondary\"> {product.description}</Typography>\n            </CardContent>\n            <CardActions disableSpacing className= {classes.cardActions}>\n                <IconButton aria-label = \"Add to Cart\">\n                    <AddShoppingCart  />\n                </IconButton>\n\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}