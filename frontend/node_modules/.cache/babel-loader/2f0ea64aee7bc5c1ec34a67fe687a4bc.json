{"ast":null,"code":"var _jsxFileName = \"/home/victor/Desktop/react pet project/pet/src/components/Checkout/AdressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdressForm = () => {\n  _s();\n\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async countryCode => {\n    const {\n      subdivisions\n    } = await commerce.services.localeListSubdivisions(countryCode);\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {\n      country,\n      region: stateProvince\n    });\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Adress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: \"\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"adress1\",\n            label: \"Adress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"City\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"ZIP\",\n            label: \"ZIP / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \" Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingCountries,\n              fullWidth: true,\n              onChange: e => setShippingCountry(e.target.value),\n              children: Object.entries(countries).map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country,\n                children: country\n              }, 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdressForm, \"yBkjz4WhZIg8xmhG/wRYC7utNEg=\", false, function () {\n  return [useForm];\n});\n\n_c = AdressForm;\nexport default AdressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdressForm\");","map":{"version":3,"sources":["/home/victor/Desktop/react pet project/pet/src/components/Checkout/AdressForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","FormInput","commerce","AdressForm","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","fetchShippingCountries","checkoutTokenId","countries","services","localeListShippingCountries","Object","keys","fetchSubdivisions","countryCode","subdivisions","localeListSubdivisions","fetchShippingOptions","country","stateProvince","options","checkout","getShippingOptions","region","id","checkoutToken","e","target","value","entries","map"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid , Typography } from '@material-ui/core';\nimport { useForm, FormProvider} from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce';\n\nconst  AdressForm = ()=> {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n\n    const methods = useForm();\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    \n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n      };\n    \n      const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n    \n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n      };\n    \n      const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n    \n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n      };\n    \n      useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n      }, []);\n    \n      useEffect(() => {\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\n      }, [shippingCountry]);\n    \n      useEffect(() => {\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n      }, [shippingSubdivision]);\n    return (\n        <div>\n            <Typography variant=\"h6\" gutterBottom>Shipping Adress</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit= '' >\n                    <Grid container spacing= {3}> \n                    <FormInput required name=\"firstName\" label=\"First name\" />\n                    <FormInput required name=\"lastName\" label=\"Last name\" />\n                    <FormInput required name=\"adress1\" label=\"Adress\" />\n                    <FormInput required name=\"email\" label=\"Email\" />\n                    <FormInput required name=\"City\" label=\"City\" />\n                    <FormInput required name=\"ZIP\" label=\"ZIP / Postal code\" />\n                    <Grid item xs={12} sm={6}>\n                        <InputLabel> Shipping Country</InputLabel>\n                        <Select value= {shippingCountries} fullWidth   onChange={(e) => setShippingCountry(e.target.value)}>\n                            {Object.entries(countries).map((country)=> (\n\n                                <MenuItem key={1} value={country}>\n                                  {country}\n                            </MenuItem> ))}\n                        </Select>\n                    </Grid>\n                    {/* <Grid item xs={12} sm={6}>\n                        <InputLabel> Shipping Subdivision</InputLabel>\n                        <Select value=\"Bucuresti\" fullWidth onChange={}>\n                            <MenuItem key={} value= {}>\n                                Select me\n                            </MenuItem>\n                        </Select>\n                    </Grid> */}\n                    {/* <Grid item xs={12} sm={6}>\n                        <InputLabel> Shipping Options</InputLabel>\n                        <Select value={} fullWidth onChange={}>\n                            <MenuItem key={} value= {}>\n                                Select me\n                            </MenuItem>\n                        </Select>\n                    </Grid> */}\n                    </Grid>\n                </form>\n            </FormProvider>\n        </div>\n    )\n}\n\nexport default AdressForm\n"]},"metadata":{},"sourceType":"module"}